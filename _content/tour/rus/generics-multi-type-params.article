Разнотипные параметры
Вы не ограничены использованием только одного дженерик типа за раз.

* Дженерики - многотиповые параметры

Вы не ограничены в использовании только одного дженерика за раз.

** Видео

Посмотрите доклад о дженериках, в котором я рассказываю обо всех
примерах, приведенных в этом разделе.

.html generics-video.html

** Обзор кода

- *Пример* *1*: Функция печати

.play generics/multi-type-params/example1.go

** Объяснение

    func Print[L any, V fmt.Stringer](labels []L, vals []V) {



        for i, v := range vals {
            fmt.Println(labels[i], v.String())
        }
    }

Функция `Print` принимает коллекцию некоторого типа `L` и коллекцию некоторого типа
`V`. Тип `L` может быть любым, а тип `V` ограничивается значениямя `String`. Коллекция некоторого типа V итерируется и печатается с
соответствующей меткой из коллекции типа L.

Имя общего типа может быть любым. Конвенции имен дженериков ещё предстоит определитьсь для лучшей практики. Пока же старайтесь
придерживаться заглавных букв, если это удобно для чтения.
