Search Operations
This section provides examples that perform search operations.

* Binary Search

- [[https://www.ardanlabs.com/training/individual-on-demand/ultimate-go-bundle/][Watch The Video]]
- Need Financial Assistance, Use Our [[https://www.ardanlabs.com/scholarship/][Scholarship Form]]

The sample program implements a function that performs an iterative
binary search against set of integers.

- See more at [[https://en.wikipedia.org/wiki/Binary_search_algorithm][https://en.wikipedia.org/wiki/Binary_search_algorithm]]

*Diagram*

    Binary search compares the target value to the middle element of the
    array. If they are not equal, the half in which the target cannot lie
    is eliminated and the search continues on the remaining half, again
    taking the middle element to compare to the target value, and repeating
    this until the target value is found. If the search ends with the
    remaining half being empty, the target is not in the array

    ┌────┐
    │ 83 │                         ◁── Target Number
    └────┘
    ┌────┐┌────┐┌────┐┌────┐┌────┐
    │ 04 ││ 42 ││ 80 ││ 83 ││ 95 │ ◁── Starting Array
    └────┘└────┘└────┘└────┘└────┘
                ┌────┐             ◁── Middle Value
                │ 80 │             ◁── Target Number Is Greater
                └────┘
                      ┌────┐┌────┐
                      │ 83 ││ 95 │ ◁── Search This Half
                      └────┘└────┘
                      ┌────┐
                      │ 83 │       ◁── Middle Value
                      └────┘
                      ┌────┐
                      │ 83 │       ◁── Target Found / Idx 3
                      └────┘

.play algorithms/searches/binary_iterative.go
.play algorithms/searches/binary_recursive.go
