Suchoperationen
Dieser Abschnitt bietet Beispiele, die Suchoperationen durchführen.


* Binäre Suche

- [[https://www.ardanlabs.com/training/individual-on-demand/ultimate-go-bundle/][Schaut euch das Video an]]
- Braucht ihr finanzielle Unterstützung? Nutzt unser  [[https://www.ardanlabs.com/scholarship/][Stipendienformular]]

Das Beispielprogramm implementiert eine Funktion, die eine iterative
binäre Suche gegen eine Menge von Ganzzahlen durchführt.

- Mehr dazu unter [[https://de.wikipedia.org/wiki/Bin%C3%A4re_Suche][https://en.wikipedia.org/wiki/Binary_search_algorithm]]

*Diagramm*

    Die binäre Suche vergleicht den Zielwert mit dem mittleren Element des Arrays. 
    Wenn sie nicht gleich sind, wird die Hälfte, in der das Ziel nicht liegen kann, 
    eliminiert und die Suche auf der verbleibenden Hälfte fortgesetzt, wobei wiederum 
    das mittlere Element mit dem Zielwert verglichen wird. Dies wird so lange
    wiederholt, bis der Zielwert gefunden ist. Endet die Suche damit, dass die
    verbleibende Hälfte leer ist, befindet sich das Ziel nicht im Array.

    ┌────┐
    │ 83 │ ◁── Zielzahl
    └────┘
    ┌────┐┌────┐┌────┐┌────┐┌────┐
    │ 04 ││ 42 ││ 80 ││ 83 ││ 95 │ ◁─── Ausgangsarray
    └────┘└────┘└────┘└────┘└────┘
                ┌────┐ ◁── Mittelwert
                │ 80 │ ◁── Zielzahl ist größer
                └────┘
                      ┌────┐┌────┐
                      │ 83 ││ 95 │ ◁── Diese Hälfte durchsuchen
                      └────┘└────┘
                      ┌────┐
                      │ 83 │ ◁── Mittelwert
                      └────┘
                      ┌────┐
                      │ 83 │ ◁── Ziel gefunden / Idx 3
                      └────┘

.play algorithms/searches/binary_iterative.go
.play algorithms/searches/binary_recursive.go
