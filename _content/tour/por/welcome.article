Bem-vindo
Bem-vindo ao Ultimate Go tour. Saiba mais sobre o tour antes de começar.

* Olá, 世界

.play welcome/hello.go

Bem-vindo ao tour pela [[/][linguagem de programação Go]].

O tour está dividido em uma lista de módulos que você pode
accessar clicando em
[[javascript:highlight(".logo")][Ultimate Go]] no canto superior esquerdo da página.

Você pode também ver a tabela de conteúdo a qualquer momento clicando no [[javascript:highlightAndClick(".nav")][menu]] no canto superior direito da página.

Ao longo do tour você encontrará uma série de slides e exercícios para você
completar.

Você pode navegar por ele usando

- [[javascript:highlight(".prev-page")]["anterior"]] ou `PageUp` para ir a página anterior,

- [[javascript:highlight(".next-page")]["próximo"]] ou `PageDown` para ir a próxima página.

O tour é interativo. Clique no botão
[[javascript:highlightAndClick("#run")][Run]] agora
(ou tecle `Shift` + `Enter`) para compilar e executar o programa no
#appengine: servidor remoto.
seu computador.
O resultado é mostrado abaixo do código.

Estes exemplos de programas demonstram os diferentes aspectos de Go. Os programas do tour são destinados a serem pontos de partida para sua própria experimentação.

Edite o programa e execute novamente.

Observe que quando você clica em [[javascript:highlightAndClick("#format")][Formatar]]
(shortcut: `Ctrl` + `Enter`), o texto no editor é formatado usando a ferramenta
[[/cmd/gofmt/][gofmt]]. Você pode ligar ou desligar o destaque de sintaxe
clicando no botão [[javascript:highlightAndClick(".syntax-checkbox")][sintaxe]].

Quando você estiver pronto para seguir em frente, clique na [[javascript:highlightAndClick(".next-page")][seta para direita]] abaixo ou aperte a tecla `PageDown`.

* Go offline (opcional)

Este tour também está disponível como um programa autônomo que você pode usar sem acesso à internet. Ele compila e executa os exemplos de código na sua própria máquina.

Para executar o tour localmente, você vai precisar primeiro [[https://go.dev/doc/install][instalar o Go]] e então executar:

    go install github.com/ardanlabs/gotour/cmd/tour@latest

Isso vai colocar um binário do tour no diretório bin do seu [[https://go.dev/cmd/go/#hdr-GOPATH_and_Modules][GOPATH]]. Ao executar o programa do tour, um navegador web será aberto exibindo sua versão local do tour.

Ou, claro, você pode continuar o tour através deste web site.

* O Playground Go 

.play welcome/sandbox.go

Este tour foi construído sobre o [[https://play.golang.org/][Go Playground]], um serviço web que é executado nos servidores de [[https://go.dev/][golang.org]].

O serviço recebe um programa Go, compila, linka, e executa o programa dentro de uma "sandbox" e então retorna o resultado.

Existem limitações para os programas que podem ser executados no playground:

No playground, o tempo começa em 2009-11-10 23:00:00 UTC (determinar o significado desta data é um exercício para o leitor). Isso torna mais fácil armazenar programas em cache, dando-lhes uma saída determinística.

Há também limites para o tempo de execução, de CPU e uso de memória, e o programa não pode acessar hosts de rede externos.

O playground usa a última versão estável do Go.

Leia "[[https://go.dev/blog/playground][Inside the Go Playground]]" para saber mais.

* Contribua Com O Projeto

*Como* *Começar*

Se você estiver interessado em adicionar mais seções ou conteúdos ao projeto, por favor
crie um issue no repositório. Basta fornecer uma ideia geral do conteúdo que você quer
adicionar e o por quê. Se você já tem um código de exemplo, por favor compartilhe.

[[https://github.com/ardanlabs/gotour][https://github.com/ardanlabs/gotour]]

Nós vamos discutir o issue e se aprovado, você pode enviar um PR. Nós adoraríamos
mais exemplos e tópicos sobre algoritmos.

*Novos* *Idiomas*

Também adoraríamos ter o conteúdo traduzido em diferentes idiomas.
Se você estiver interessado, por favor crie um issue. Podemos compensar por
esse esforço.

* Sobre Ardan Labs

*Consultoria* *de* *Software* *de* *Alto* *Desempenho*, *Treinamento*, *Recrutamento,* *&* *Desenvolvimento*

Esteja você procurando por ajuda com Go, Rust, Kubernetes, Terraform ou
Blockchain, Ardan Labs é o seu parceiro estratégico para soluções de software de alto desempenho.

Informe-se sobre eventos de treinamento corporativo, sessões de treinamento ao vivo com inscrições abertas,
e opções de aprendizagem sob demanda.

Ardan Labs ([[https://www.ardanlabs.com][www.ardanlabs.com]])
- [[mailto:hello@ardanlabs.com][hello@ardanlabs.com]]

Para participar de qualquer um dos nossos treinamentos de alto desempenho confira esse link:

- [[https://www.ardanlabs.com/training][www.ardanlabs.com/training]]

** Mais Materiais

Todo o material da aula Ultimate Go pode ser encontrado nesse repositório

- [[https://github.com/ardanlabs/gotraining/blob/master/topics/courses/go/README.md][Repositório Ultimate Go]]

Dê uma olhada no documento de design antes de começar para entrar na mentalidade certa
para aprender a linguagem.

- [[https://github.com/ardanlabs/gotraining/blob/master/topics/go/README.md][Documento de Design]]

O repositório tem mais tópicos que não serão cobertos pelo Go tour, então confira-os quando você terminar.

- [[https://github.com/ardanlabs/gotraining/blob/master/topics/courses/go/tooling/README.md][Teste, Benchmarking, e Profiling]]
- [[https://github.com/ardanlabs/gotraining/blob/master/topics/courses/go/packages/README.md][Pacotes da Biblioteca Padrão]]

** Ultimate Go Notebook

Todo esse material e mais também pode ser encontrado em Ultimate Go Notebook

- [[https://www.ardanlabs.com/ultimate-go-notebook/][Ultimate Go Notebook]]

** Preciso de Ajuda

Não hesite em entrar em contato com Bill Kennedy at Ardan labs se tiver problemas
ou dúvidas

[[mailto:bill@ardanlabs.com][bill@ardanlabs.com]]

** Nossa Experiência

Nós ensinamos Go para milhares de desenvolvedores ao redor do mundo desde 2014. Não
existe nenhuma outra empresa que faz isso há mais tempo e nosso material se provou
ajudar a impulsionar desenvolvedores de 6 a 12 meses à frente em conhecimentos em Go. Nós sabemos
quais conhecimentos os desenvolvedores precisam para serem produtivos e eficientes ao escrever
software em Go.

Nossas aulas são perfeitas para desenvolvedores de nível intermediário que possuem pelo menos alguns
meses a anos de experiência escrevendo código em Go. Nossas aulas proporcionam um
conhecimento muito profundo sobre a linguagem de programação com um grande foco em mecânicas da linguagem,
filosofias de design e guidelines. Nós focamos em ensinar como escrever código priorizando
consistência, integridade, legibilidade e simplicidade. Nós falamos muito sobre "se
desempenho é importante" com foco em simpatia mecânica, design orientado a dados,
desacoplamento e escrever/debugar software de produção.

** Nosso Professor

William Kennedy é sócio-gerente da Ardan Labs em Miami, Flórida. Ardan Labs
é uma empresa de desenvolvimento e treinamento de alto desempenho que trabalha com
startups e empresas da Fortune 500. Ele é também coautor do livro Go in Action,
autor do blog GoingGo.Net, e membro fundador do GoBridge que está trabalhando
para aumentar a adoção do Go por meio da diversidade.

*Treinamento* *em* *Vídeo*

- [[https://education.ardanlabs.com/][Vídeo Ultimate Go]]
- [[https://youtube.ardanlabs.com/][Canal no Youtube da Ardan Labs]]

*Blog*

- [[https://www.ardanlabs.com/blog/][Ardan Labs Blog Técnico]]

*Podcasts*

- [[https://ardanlabs.buzzsprout.com/][Ardan Labs Podcast: Séries em Andamento]]

** Mais Sobre Go

Go é uma linguagem de programação de código aberto que facilita construir
um software simples, confiável, e eficiente. Embora ela tome emprestadas ideias de linguagens existentes,
ela possui uma natureza simples e única que torna os programas Go diferentes em caráter dos
programas escritos em outras linguagens. Ela equilibra os recursos de uma linguagem de sistemas
de baixo nível com alguns recursos de alto nível que você vê em linguagens modernas hoje.
Isso cria um ambiente de programação que permite que você seja incrivelmente produtivo,
eficiente e tenha total controle; em Go, você pode escrever menos código e fazer muito mais.

Go é a fusão de desempenho e produtividade em uma linguagem que os desenvolvedores de software
podem aprender, usar e entender. Go não é C, ainda sim nós temos muitos dos 
benefícios de C com os benefícios de uma linguagem de programação de alto nível.

- [[https://henvic.dev/posts/go/][The Ecosystem of the Go Programming Language - Henrique Vicente]]
- [[https://www.infoq.com/presentations/go-concurrency-gc][The Why of Go - Carmen Andoh]]
- [[https://github.com/ardanlabs/gotraining#:~:text=Go%20Ten%20Years%20and%20Climbing][Go Ten Years and Climbing - Rob Pike]]
- [[https://github.com/ardanlabs/gotraining#:~:text=The%20eigenvector%20of%20%22Why%20we%20moved%20from%20language%20X%20to%20language%20Y%22][The eigenvector of "Why we moved from language X to language Y" - Erik Bernhardsson]]
- [[https://talks.golang.org/2012/splash.article][Learn More - Go Team]]
- [[https://github.com/ardanlabs/gotraining#:~:text=Simplicity%20is%20Complicated][Simplicity is Complicated - Rob Pike]]
- [[http://aarti.github.io/2016/08/13/getting-started-in-go][Getting Started In Go - Aarti Parikh]]

** Leitura Importante

Por favor, verifique esta página de [[https://github.com/ardanlabs/gotraining/blob/master/reading/README.md][leitura importante]].
Você encontrará artigos e vídeos sobre simpatia mecânica, design orientado a dados,
Go runtime e otimizações e artigos sobre a história da computação.

** Junte-se à Comunidade Go no Slack

Nós usamos um canal no Slack para compartilhar links, códigos e exemplos durante o treinamento.
Ele é grátis. Essa é também a mesma comunidade do Slack que você usará depois do treinamento
para pedir ajuda e interagir com muitos experts em Go ao redor do mundo na comunidade.

- Usando o link a seguir, preencha seu nome e endereço de email: [[https://invite.slack.gobridge.org/][https://invite.slack.gobridge.org]]
- Verifique seu email e siga o link para o aplicativo Slack.
