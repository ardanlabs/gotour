Methods
Methods are functions that give data the ability to exhibit behavior.

* Methods

Methods are functions that give data the ability to exhibit behavior.

* Notes

- Methods are functions that declare a receiver variable.
- Receivers bind a method to a type and can use value or pointer semantics.
- Value semantics mean a copy of the value is passed across program boundaries.
- Pointer semantics mean a copy of the values address is passed across program boundaries.
- Stick to a single semantic for a given type and be consistent.

* Quotes

"Methods are valid when it is practical or reasonable for a piece of data to expose a capability." - William Kennedy

* Links

- [[https://golang.org/doc/effective_go.html#methods][Methods]]    
- [[https://www.ardanlabs.com/blog/2014/05/methods-interfaces-and-embedded-types.html][Methods, Interfaces and Embedded Types in Go]] - William Kennedy    
- [[https://www.ardanlabs.com/blog/2018/01/escape-analysis-flaws.html][Escape-Analysis Flaws]] - William Kennedy  

* Code Review

- *Example* *1:* Declare and receiver behavior
.play methods/example1/example1.go
			   

- *Example* *5:* Value and Pointer semantics
.play methods/example5/example5.go
			   

- *Example* *2:* Named typed methods
.play methods/example2/example2.go
			   

- *Example* *3:* Function/Method variables
.play methods/example3/example3.go
			   

- *Example* *4:* Function Types
.play methods/example4/example4.go
			 

* Exercises

Exercise 1

Declare a struct that represents a baseball player. Include name, atBats and hits. Declare a method that calculates a players batting average. The formula is Hits / AtBats. Declare a slice of this type and initialize the slice with several players. Iterate over the slice displaying the players name and batting average.

.play methods/exercises/template1/template1.go
			 
* Answer

.play methods/exercises/exercise1/exercise1.go
			 
___
All material is licensed under the [[http://www.apache.org/licenses/LICENSE-2.0][Apache License Version 2.0, January 2004]].
