Opérations de Recherche
Cette section fournie des exemples qui exécutent des opérations de recherche.

* Recherche Binaire

- [[https://www.ardanlabs.com/training/individual-on-demand/ultimate-go-bundle/][Regarder la Video]]
- Besoin d'une aide financière, Utilisez notre [[https://www.ardanlabs.com/scholarship/][Formulaire de Bourse d'études]]

Ce programme implémente une fonction qui exécute une recherche binaire itérative sur un ensemble d'entiers.

- En apprendre plus sur [[https://en.wikipedia.org/wiki/Binary_search_algorithm][https://en.wikipedia.org/wiki/Binary_search_algorithm]]

*Diagramme*

    La recherche binaire compare la valeur cible à l'élément du milieu du tableau. 
    Si elles ne sont pas égales, la moitié dans laquelle la cible ne peut pas se trouver 
    est éliminée et la recherche se poursuit sur la moitié restante, en prenant à 
    nouveau l'élément du milieu pour le comparer à la valeur cible. Ce processus se 
    répète jusqu'à ce que la valeur cible soit trouvée. Si la recherche se termine 
    avec la moitié restante vide, cela signifie que la cible ne se trouve pas dans le tableau.

    ┌────┐
    │ 83 │                         ◁── Nombre Cible
    └────┘
    ┌────┐┌────┐┌────┐┌────┐┌────┐
    │ 04 ││ 42 ││ 80 ││ 83 ││ 95 │ ◁── Tableau de Départ
    └────┘└────┘└────┘└────┘└────┘
                ┌────┐             ◁── Valeur du Milieu
                │ 80 │             ◁── Le Nombre Cible Est Plus Grand
                └────┘
                      ┌────┐┌────┐
                      │ 83 ││ 95 │ ◁── Recherche Dans Cette Moitié
                      └────┘└────┘
                      ┌────┐
                      │ 83 │       ◁── Valeur du Milieu
                      └────┘
                      ┌────┐
                      │ 83 │       ◁── Cible Trouvée / Idx 3
                      └────┘

.play algorithms/searches/binary_iterative.go
.play algorithms/searches/binary_recursive.go
