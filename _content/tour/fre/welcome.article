Bienvenue
Bienvenue dans l'Ultimate Go tour. Apprenez-en davantage sur la visite avant de commencer.

* Bonjour, 世界

.play welcome/hello.go

Bienvenue dans le Tour du [[/][langage de programmation Go]].

Le Tour est divisé en une liste de modules auxquels vous 
pouvez accéder en cliquant sur
[[javascript:highlight(".logo")][Ultimate Go]] en haut à gauche de la page.

Vous pouvez également consulter la table des matières à tout moment en cliquant sur l'icône [[javascript:highlightAndClick(".nav")][menu]] en haut à droite de la page.

Tout au long du Tour vous trouverez une série de slides et d'exercices
à compléter.

Vous pouvez les parcourir en utilisant

- [[javascript:highlight(".prev-page")]["previous"]] ou `PageUp` pour aller à la page précédente,

- [[javascript:highlight(".next-page")]["next"]] ou `PageDown` pour aller à la page suivante.

Le tour est intéractif. Cliquez sur le bouton
[[javascript:highlightAndClick("#run")][Run]] maintenant
(ou appuyez `Shift` + `Enter`) pour compiler et exécuter le programme sur
#appengine: un serveur distant.
votre ordinateur.
Le résultat est affiché en dessous du code.

Ces exemples de programmes illustrent différents aspects de Go. Les programmes du tour sont censés être des points de départ pour votre propre expérimentation.

Modifiez le programme et exécutez-le à nouveau.

Quand vous cliquez sur [[javascript:highlightAndClick("#format")][Format]]
(shortcut: `Ctrl` + `Enter`), le texte dans l'éditeur est formaté à l'aide de l'outil 
[[/cmd/gofmt/][gofmt]]. Vous pouvez activer et désactiver la coloration syntaxique
en cliquant sur le bouton [[javascript:highlightAndClick(".syntax-checkbox")][syntax]].

Lorsque vous êtes prêt à continuer, cliquez sur le bouton [[javascript:highlightAndClick(".next-page")][right arrow]] ci-dessous ou tapez sur la touche `PageDown`.

* Go hors ligne (optionnel)

Ce tour est également disponible sous forme de programme autonome que vous pouvez utiliser sans accès à Internet. Il crée et exécute les exemples de code sur votre propre machine.

Pour exécuter le tour localement, vous devrez d'abord [[https://go.dev/doc/install][installer Go]], puis exécuter :

    go install github.com/ardanlabs/gotour/cmd/tour@latest

Cela placera un binaire du tour dans le répertoire bin de votre [[https://go.dev/cmd/go/#hdr-GOPATH_and_Modules][GOPATH]]. Lorsque vous exécuterez le programme du tour, il ouvrira un navigateur Web affichant votre version locale du tour.

Bien entendu, vous pouvez continuer le tour via ce site Internet.

* Le Go Playground

.play welcome/sandbox.go

Ce tour est construit à partir du [[https://play.golang.org/][Go Playground]], un service Web qui fonctionne sur les serveurs de [[https://go.dev/][golang.org]].

Le service reçoit un programme Go, le compile, le lie et l'exécute dans un bac à sable (sandbox), puis renvoie sa sortie.

Il existe des limites aux programmes qui peuvent être exécutés dans le playground :

Dans le playground, l'heure commence à 2009-11-10 23:00:00 UTC (déterminer la signification de cette date est un exercice pour le lecteur). Cela facilite la mise en cache des programmes en leur donnant une sortie déterministe.
Il existe également des limites sur le temps d'exécution ainsi que sur l'utilisation du processeur et de la mémoire, de plus, le programme ne peut pas accéder aux hôtes réseau externes.
Le playground utilise la dernière version stable de Go.


Lisez "[[https://go.dev/blog/playground][le Go Playground]]" pour en savoir plus.

* Contribuez Au Projet

*Comment* *Commencer*

Si vous souhaitez ajouter plus de sections ou de contenu au projet, veuillez
créer une issue au dépôt. Fournissez simplement une idée générale du contenu que vous souhaitez
ajouter et pourquoi. Si vous avez déjà un exemple de code, partagez-le.

[[https://github.com/ardanlabs/gotour][https://github.com/ardanlabs/gotour]]

Nous discuterons de l'issue et, si elle est approuvée, vous pourrez soumettre une PR. Nous aimerions
plus d'exemples et de sujets dans la section Algorithmes.

*Nouveaux* *Langages*

Nous aimerions également que le contenu soit traduit dans différentes langues.
Si vous êtes intéressé, veuillez ajouter une issue. Nous pouvons vous indemniser pour cet
effort.

* A propos de Ardan Labs

*Conseil en Logiciels de Haute performance*, *Formation*, *Recrutement*, *&* *Développement*

Que vous recherchiez de l'aide avec Go, Rust, Kubernetes, Terraform ou
sur la blockchain, Ardan Labs est votre partenaire stratégique pour des Solutions logicielles
performantes.

Informez-vous sur les événements de formation en entreprise, les sessions de formation en direct à inscription ouverte et les options d'apprentissage à la demande.

Ardan Labs ([[https://www.ardanlabs.com][www.ardanlabs.com]])
- [[mailto:hello@ardanlabs.com][hello@ardanlabs.com]]

Pour assister à l’une de nos formations de haute performance, consultez ce lien :

- [[https://www.ardanlabs.com/training][www.ardanlabs.com/training]]

** Plus De Matériel

Tout le matériel pour la classe Ultimate Go peut être trouvé dans ce dépôt.

- [[https://github.com/ardanlabs/gotraining/blob/master/topics/courses/go/README.md][Ultimate Go Repository]]

Consultez le document de conception avant de commencer, afin de vous mettre dans un état d'esprit 
propice à l'apprentissage du langage.

- [[https://github.com/ardanlabs/gotraining/blob/master/topics/go/README.md][Document de Conception]]

Le dépôt contient davantage de sujets qui ne seront pas vus dans le tour de Go, alors consultez-les lorsque
vous aurez terminé.

- [[https://github.com/ardanlabs/gotraining/blob/master/topics/courses/go/tooling/README.md][Tests, analyses comparatives et profilage]]
- [[https://github.com/ardanlabs/gotraining/blob/master/topics/courses/go/packages/README.md][Packages de bibliothèque standard]]

** Ultimate Go Notebook

Tout ce matériel et bien plus encore peuvent également être trouvés dans l'Ultimate Go Notebook

- [[https://www.ardanlabs.com/ultimate-go-notebook/][Ultimate Go Notebook]]

** Besoin d'Aide

N'hésitez pas à contacter Bill Kennedy de Ardan Labs si vous rencontrez des problèmes
ou avez des questions.

[[mailto:bill@ardanlabs.com][bill@ardanlabs.com]]

** Notre expérience

Nous avons enseigné Go à des milliers de développeurs dans le monde entier depuis 2014.
Aucune autre entreprise ne le fait depuis plus longtemps et notre matériel s'est avéré aider
les développeurs à gagner de 6 à 12 mois sur leur apprentissage de Go. Nous savons
de quelles connaissances les développeurs ont besoin pour être productifs et efficaces lors de l'écriture
de logiciels en Go.

Nos cours sont parfaits pour les développeurs de niveau intermédiaire qui ont au moins
quelques mois ou années d'expérience dans l'écriture de code en Go. Nos cours offrent une connaissance
très approfondie du langage de programmation avec un accent important sur la mécanique du langage,
ses philosophies de conception et ses lignes directrices. Nous nous concentrons sur l'enseignement de l'écriture
du code en priorisant sa cohérence, son intégrité, sa lisibilité et sa simplicité. Nous abordons beaucoup
de choses sur « si la performance compte » en mettant l'accent sur la sympathie mécanique, la conception orientée
données, le découplage et l'écriture/débogage de logiciels de production.

** Notre Professeur

William Kennedy est associé directeur chez Ardan Labs à Miami, en Floride. Ardan Labs
est une société de développement et de formation performante qui accompagne les startups et
entreprises Fortune 500. Il est également co-auteur du livre Go in Action, l'auteur
du blog GoingGo.Net, et membre fondateur de GoBridge qui travaille à
augmenter l’adoption de Go grâce à la diversité.

*Video* *Formation*

- [[https://education.ardanlabs.com/][Ultimate Go Video]]
- [[http://youtube.ardanlabs.com/][Ardan Labs YouTube Channel]]

*Blog*

- [[https://www.ardanlabs.com/blog/][Ardan Labs Blog Technique]]

*Podcasts*

- [[https://ardanlabs.buzzsprout.com/][Ardan Labs Podcast: On Going Series]]

** En savoir plus sur Go

Go est un langage de programmation open source qui simplifie la création de
logiciels fiables et efficaces. Bien qu'il emprunte des idées à des langages existants,
il a une nature unique et simple qui rend les programmes Go différents des programmes
écrits dans d'autres langages. Il équilibre les capacités d'un langage système de bas niveau 
avec certaines fonctionnalités de haut niveau que l'on trouve aujourd'hui dans les langages modernes.
Cela crée un environnement de programmation qui vous permet d'être incroyablement productif,
performant et totalement sous contrôle; en Go vous pouvez écrire moins de code et faire beaucoup plus.

Go est la fusion de la performance et de la productivité dans un langage que les développeurs de logiciels 
peuvent apprendre, utiliser et comprendre. Go n'est pas le langage C, mais il nous permet de bénéficier 
des avantages du langage C et des avantages des langages de programmation de plus haut niveau.

- [[https://henvic.dev/posts/go/][The Ecosystem of the Go Programming Language - Henrique Vicente]]
- [[https://www.infoq.com/presentations/go-concurrency-gc][The Why of Go - Carmen Andoh]]
- [[https://github.com/ardanlabs/gotraining#:~:text=Go%20Ten%20Years%20and%20Climbing][Go Ten Years and Climbing - Rob Pike]]
- [[https://github.com/ardanlabs/gotraining#:~:text=The%20eigenvector%20of%20%22Why%20we%20moved%20from%20language%20X%20to%20language%20Y%22][The eigenvector of "Why we moved from language X to language Y" - Erik Bernhardsson]]
- [[https://talks.golang.org/2012/splash.article][Learn More - Go Team]]
- [[https://github.com/ardanlabs/gotraining#:~:text=Simplicity%20is%20Complicated][Simplicity is Complicated - Rob Pike]]
- [[http://aarti.github.io/2016/08/13/getting-started-in-go][Getting Started In Go - Aarti Parikh]]

** Lectures Importantes

Veuillez consulter cette page de [[https://github.com/ardanlabs/gotraining/blob/master/reading/README.md][lecture importante]].
Vous trouverez des articles et des vidéos sur la sympathie mécanique, la conception orientée données,
le moteur d'exécution (runtime) de Go et les optimisations, ainsi que des articles sur l'histoire de l'informatique.

** Rejoignez la communauté Go sur Slack

Nous utilisons un canal Slack pour partager des liens, du code et des exemples pendant la formation.
C'est gratuit. C'est également la même communauté Slack que vous utiliserez après la formation pour
demander de l'aide et interagir avec de nombreux experts Go du monde entier au sein de la communauté.

- À l'aide du lien suivant, remplissez votre nom et votre adresse email : [[https://invite.slack.gobridge.org/][https://invite.slack.gobridge.org]]
- Consultez votre compte de messagerie électronique et suivez le lien vers l'application Slack.
