Λειτουργίες Αναζήτησης 
Αυτή η ενότητα παρέχει παραδείγματα, που πραγματοποιούν λειτουργίες αναζήτησης.

* Δυαδική Αναζήτηση

- [[https://www.ardanlabs.com/training/individual-on-demand/ultimate-go-bundle/][Παρακολουθήστε το Video]]
- Εάν Χρειάζεστε Οικονομική Συνδρομή, Χρησιμοποιήστε το Σχετικό [[https://www.ardanlabs.com/scholarship/][Έγγραφο Υποτροφίας]]

Αυτό το παράδειγμα προγράμματος υλοποιεί μια συνάρτηση, που πραγματοποιεί μια επαναληπτική
δυαδική αναζήτηση, σε ένα σύνολο από ακεραίους.

- Περισσότερες πληροφορίες στο [[https://en.wikipedia.org/wiki/Binary_search_algorithm][https://en.wikipedia.org/wiki/Binary_search_algorithm]]

*Διάγραμμα*

    Η δυαδική αναζήτηση συγκρίνει την τιμή στόχο, με το μεσαίο στοιχείο του
    πίνακα. Αν αυτά δεν είναι ίσα, το μισό στο οποίο ο στόχος δεν είναι δυνατόν
    να βρίσκεται, απομακρύνεται και η αναζήτηση συνεχίζει στο υπόλοιπο μισό,
    παίρνοντας ξανά το μεσαίο στοιχείο, προκειμένου να συγκριθεί με την τιμή 
    στόχο και συνεχίζεται αυτή η διαδικασία, έως ότου βρεθεί η τιμή στόχος.
    Αν η αναζήτηση τελειώσει με το υπόλοιπο μισό να είναι άδειο, ο στόχος δεν
    βρίσκεται στον πίνακα.

    ┌────┐
    │ 83 │                         ◁── Αριθμός Στόχος
    └────┘
    ┌────┐┌────┐┌────┐┌────┐┌────┐
    │ 04 ││ 42 ││ 80 ││ 83 ││ 95 │ ◁── Αρχικός Πίνακας
    └────┘└────┘└────┘└────┘└────┘
                ┌────┐             ◁── Μεσαία Τιμή
                │ 80 │             ◁── Αριθμός Στόχος είναι Μεγαλύτερος
                └────┘
                      ┌────┐┌────┐
                      │ 83 ││ 95 │ ◁── Αναζήτηση σε αυτό το μισό
                      └────┘└────┘
                      ┌────┐
                      │ 83 │       ◁── Μεσαία Τιμή
                      └────┘
                      ┌────┐
                      │ 83 │       ◁── Στόχος Εντοπίστηκε / Δείκτης 3
                      └────┘

.play algorithms/searches/binary_iterative.go
.play algorithms/searches/binary_recursive.go
