//go:build OMIT

// Όλα τα υλικά είναι αδειοδοτημένα υπό την Άδεια Apache Έκδοση 2.0, Ιανουάριος 2004
// http://www.apache.org/licenses/LICENSE-2.0

// Δείγμα προγράμματος, προκειμένου να παρουσιαστεί πως οι φέτες επιτρέπουν
// αποτελεσματικές γραμμικές προσπελάσεις.
package main

import (
	"encoding/binary"
	"fmt"
)

func main() {

	// Δεδομένης μιας ακολουθίας από byte προς επεξεργασία.
	x := []byte{0x0A, 0x15, 0x0e, 0x28, 0x05, 0x96, 0x0b, 0xd0, 0x0}

	// Πραγματοποιήστε μια γραμμική προσπέλαση στα byte, χωρίς να κάνετε
	// αντίγραφα των πραγματικών δεδομένων, αλλά περνώντας αυτά τα byte
	// στην συνάρτηση του πακέτου binary, προς επεξεργασία.

	a := x[0]
	b := binary.LittleEndian.Uint16(x[1:3])
	c := binary.LittleEndian.Uint16(x[3:5])
	d := binary.LittleEndian.Uint32(x[5:9])

	// Το αποτέλεσμα είναι πρόσβαση σε δεδομένα με μηδενική εκχώρηση,
	// που είναι μηχανικά συμπαθητική με το υλικό.

	fmt.Println(a, b, c, d)
}
