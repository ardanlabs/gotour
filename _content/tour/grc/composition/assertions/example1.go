//go:build OMIT

// Όλα τα υλικά είναι αδειοδοτημένα υπό την Άδεια Apache Έκδοση 2.0, Ιανουάριος 2004
// http://www.apache.org/licenses/LICENSE-2.0

// Δείγμα προγράμματος, που παρουσιάζει πότε παρέχονται από τον
// μεταγλωττιστή σιωπηρές μετατροπές διεπαφών
package main

import "fmt"

// Ο Mover παρέχει υποστήριξη, για την μεταφορά πραγμάτων.
type Mover interface {
	Move()
}

// Ο Locker παρέχει υποστήριξη, για κλείδωμα και ξεκλείδωμα πραγμάτων.
type Locker interface {
	Lock()
	Unlock()
}

// Ο MoveLocker παρέχει υποστήριξη, για μεταφορά και κλείδωμα πραγμάτων.
type MoveLocker interface {
	Mover
	Locker
}

// Ο bike αναπαριστά έναν πραγματικό τύπο, για το παράδειγμα.
type bike struct{}

// Η Move μπορεί να αλλάξει την θέση ενός ποδήλατου.
func (bike) Move() {
	fmt.Println("Moving the bike")
}

// Η Lock αποτρέπει την μετακίνηση ενός ποδήλατου.
func (bike) Lock() {
	fmt.Println("Locking the bike")
}

// Η Unlock επιτρέπει την μετακίνηση ενός ποδηλάτου.
func (bike) Unlock() {
	fmt.Println("Unlocking the bike")
}

func main() {

	// Δηλώστε μεταβλητές των διεπαφών MoveLocker και Mover και εκχωρείστε
	// σε αυτές τις μηδενικές τους τιμές.
	var ml MoveLocker
	var m Mover

	// Δημιουργείστε μια τιμή τύπου bike και εκχωρείστε την τιμή της στην
	// τιμή διεπαφής MoveLocker.
	ml = bike{}

	// Μια τιμή διεπαφής τύπου MoveLocker μπορεί να μετατραπεί σιωπηρά
	// σε μια τιμή τύπου Mover. Και οι δύο δηλώνουν μια μέθοδο με το όνομα move.
	m = ml

	// prog.go:68: cannot use m (type Mover) as type MoveLocker in assignment:
	//	   Mover does not implement MoveLocker (missing Lock method)
	ml = m

	// Ο τύπος διεπαφής Mover δεν δηλώνει μεθόδους τύπου με όνομα lock και
	// unlock. Επομένως, ο μεταγλωττιστής δεν μπορεί να πραγματοποιήσει μια
	// σιωπηρή μετατροπή, προκειμένου να εκχωρήσει μια τιμή τύπου διεπαφής
	// Mover σε μια τιμή διεπαφής τύπου MoveLocker. Είναι άσχετο ότι η τιμή
	// του πραγματικού τύπου, που είναι τύπου bike, που βρίσκεται αποθηκευμένη
	// στην τιμή διεπαφής Mover υλοποιεί την διεπαφή MoveLocker.

	// Μπορούμε να πραγματοποιήσουμε μια διαβεβαίωση τύπου στο στάδιο εκτέλεσης,
	// προκειμένου να υποστηρίξουμε την εκχώρηση.

	// Πραγματοποιείστε μια διαβεβαίωση τύπου στην τιμή διεπαφής Mover, προκειμένου
	// να έχετε πρόσβαση σε ένα ΑΝΤΙΓΡΑΦΟ της πραγματικής τιμής τύπου, που είναι
	// τύπου bike η οποία βρίσκεται αποθηκευμένη, σε αυτή.
	// Στην συνέχεια μπορείτε να εκχωρείσετε το ΑΝΤΙΓΡΑΦΟ του πραγματικού τύπου, στην
	// διεπαφή MoveLocker.
	b := m.(bike)
	ml = b

	// Είναι σημαντικό να σημειωθεί ότι το συντακτικό της διαβεβαίωσης τύπου
	// παρέχει ένα τρόπο να δηλωθεί τι τύπου τιμή είναι αποθηκευμένη στην διεπαφή.
	// Αυτό είναι περισσότερο ισχυρό, από την άποψη της γλώσσας και της δυνατότητας
	// ευκολίας ανάγνωσης, από την χρήση ένός συντακτικού ανάθεσης, όπως συμβαίνει σε
	// άλλες γλώσσες.
}
