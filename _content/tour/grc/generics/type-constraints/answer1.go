//go:build OMIT

// Όλα τα υλικά είναι αδειοδοτημένα υπό την Άδεια Apache Έκδοση 2.0, Ιανουάριος 2004
// http://www.apache.org/licenses/LICENSE-2.0

// Υλοποιήστε μια συνάρτηση γενικού προγραμματισμού με το όνομα copyfy,
// οποία είναι περιορισμένη στο να κάνει μόνο αντίγραφα από φέτες τύπου
// συμβολοσειράς ή ακεραίων.
package main

import (
	"fmt"
)

// Δηλώστε μια διεπαφή με το όνομα copyer, που δημιουργεί ένα περιορισμό
// σε συμβολοσειρές και ακεραίους.
type copyer interface {
	string | int
}

// Υλοποιήστε μια συνάρτηση γενικού προγραμματισμού με το όνομα copyfy,
// που αποδέχεται μια φέτα κάποιου τύπου T, όμως είναι περιορισμένη από την
// διεπαφή copyer.
func copyfy[T copyer](src []T) []T {
	dest := make([]T, len(src))

	copy(dest, src)

	return dest
}

// =============================================================================

func main() {

	// Δημιουργήστε μια φέτα συμβολοσειρών με τρεις τιμές.
	src1 := []string{"Bill", "Jill", "Joan"}

	// Καλέστε την συνάρτηση copyfy, προκειμένου να κάνετε ένα αντίγραφο
	// της φέτας.
	dest1 := copyfy(src1)

	// Παρουσιάστε την φέτα και το αντίγραφο.
	fmt.Println("src string :", src1)
	fmt.Println("dest string:", dest1)

	// -------------------------------------------------------------------------

	// Δημιουργήστε μια φέτα ακεραίων με τρέις τιμές.
	src2 := []int{10, 20, 30}

	// Καλέστε την συνάρτηση copyfy, προκειμένου να κάνετε αντίγραφο
	// της φέτας.
	dest2 := copyfy(src2)

	// Παρουσιάστε την φέτα και το αντίγραφο.
	fmt.Println("src int :", src2)
	fmt.Println("dest int:", dest2)
}
