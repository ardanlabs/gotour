Σχεσιακοί Πίνακες
Ένας σχεσιακός πίνακας (στμ. map) είναι μια δομή δεδομένων, που παρέχει υποστήριξη για αποθήκευση και πρόσβαση σε δεδομένα, με βάση ένα κλειδί.

* Σχεσιακοί Πίνακες

- [[https://www.ardanlabs.com/training/individual-on-demand/ultimate-go-bundle/][Παρακολουθήστε το Video]]
- Εάν Χρειάζεστε Οικονομική Συνδρομή, Χρησιμοποιήστε το Σχετικό [[https://www.ardanlabs.com/scholarship/][Έγγραφο Υποτροφίας]]

Ένας σχεσιακός πίνακας (στμ. map) είναι μια δομή δεδομένων, που παρέχει υποστήριξη για αποθήκευση και πρόσβαση 
σε δεδομένα, με βάση ένα κλειδί. Χρησιμοποιεί μια συνάρτηση κατακερματισμού και ένα σύστημα υποδοχέων (στμ. buckets) που διατηρούν 
ένα συνεχόμενο τμήμα μνήμης, από κάτω.

** Επισκόπηση Κώδικα

- *Παράδειγμα* *1:* Δήλωση, εγγραφή, ανάγνωση και διαγραφή
- *Παράδειγμα* *2:* Απόντα κλειδιά
- *Παράδειγμα* *3:* Περιορισμοί κλειδιών σχεσιακού πίνακα
- *Παράδειγμα* *4:* Ρητοί σχεσιακοί πίνακες και range
- *Παράδειγμα* *5:* Ταξινόμηση σχεσιακών πινάκων με κλειδί
- *Παράδειγμα* *6:* Λαμβάνοντας την διεύθυνση μνήμης ενός στοιχείου
- *Παράδειγμα* *7:* Οι σχεσιακοί πίνακες είναι Τύποι Αναφορών

.play maps/example1.go
.play maps/example2.go
.play maps/example3.go
.play maps/example4.go
.play maps/example5.go
.play maps/example6.go
.play maps/example7.go

** Δηλώνοντας και Δημιουργώντας Σχεσιακούς Πίνακες

H δηλώση και η δημιουργία ενός σχεσιακού πίνακα μπορεί να γίνει με διαφορετικούς τρόπους.

    type user struct {
        name     string
        username string
    }

    // Δημιουργία σχεσιακού πίνακα με την μηδενική τιμή του,
    // που μπορεί να αποθηκεύσει τιμές user, με βάση κλειδί τύπου 
    // συμβολοσειράς. Προσπαθώντας να χρησιμοποιήσει κανείς αυτόν 
    // τον σχεσιακό πίνακα θα οδηγήθει σε σφάλμα σταδίου εκτέλεσης (panic).
    var users map[string]user

    // Δημιουργία σχεσιακό πίνακα με την χρήση της make,
    // που μπορεί να αποθηκεύσει τιμές user με βάση κλειδί 
    // τύπου συμβολοσειράς.
    users := make(map[string]user)

    // Δημιουργία σχεσιακού πίνακα με αρχική τιμή μια άδεια ρητή
    // κατασκευή σχεσιακού πίνακα, που μπορεί να αποθηκεύσει τιμές
    // user, με βάση κλειδί τύπου συμβολοσειράς.
    users := map[string]user{}

Ένας σχεσιακός πίνακας με μηδενική τιμή δεν μπορεί να χρησιμοποιηθεί και θα έχει ως αποτέλεσμα 
τον πανικό του προγράμματος. Η χρήση της προεγκατεστημένης συνάρτησης make και της ρητής κατασκευής, 
δημιουργούν έναν σχεσιακό πίνακα έτοιμο για χρήση.

    func main() {
        users := make(map[string]user)

        users["Roy"] = user{"Rob", "Roy"}
        users["Ford"] = user{"Henry", "Ford"}
        users["Mouse"] = user{"Mickey", "Mouse"}
        users["Jackson"] = user{"Michael", "Jackson"}

        for key, value := range users {
            fmt.Println(key, value)
        }
    }

Αποτέλεσμα:

    Roy {Rob Roy}
    Ford {Henry Ford}
    Mouse {Mickey Mouse}
    Jackson {Michael Jackson}

Αν η προεγκατεστημένη συνάρτηση make χρησιμοποιηθεί για την δημιουργία ενός σχεσιακού πίνακα, 
τότε μπορεί να γίνει χρήση του τελεστή εκχώρησης, για την προσθήκη και την ανανέωση τιμών στον σχεσιακό 
πίνακα. Η σειρά με την οποία επιστρέφονται τα ζεύγη κλειδιά/τιμές, όταν χρησιμοποιείται το range σε 
ένα σχεσιακό πίνακα δεν είναι προσδιορισμένος, από τις προδιαγραφές της γλώσσας και εξαρτάται από 
την υλοποίηση του κάθε μεταγλωττιστή.  

    func main() {
        users := map[string]user{
            "Roy":     {"Rob", "Roy"},
            "Ford":    {"Henry", "Ford"},
            "Mouse":   {"Mickey", "Mouse"},
            "Jackson": {"Michael", "Jackson"},
        }

        for key, value := range users {
            fmt.Println(key, value)
        }
    }

Αποτέλεσμα:

    Ford {Henry Ford}
    Jackson {Michael Jackson}
    Roy {Rob Roy}
    Mouse {Mickey Mouse}

Σε αυτή την περίπτωση, τα αποτελέσματα επιστρέφουν με διαφορετική σειρά, από την οποία έχουν 
απαριθμηθεί στην δημιουργία του σχεσιακού πίνακα. Ο τρέχων αλγόριθμος, για την έκδοση 1.16,
θα επιστρέψει τα αποτελέσματα με τυχαία σειρά, όταν ο αριθμός των τιμών φτάσει ένα ορισμένο όριο. 
Ξανά, αυτό είναι μια υλοποίηση μεταγλωττιστή, που επιτρέπεται να αλλάξει. Κανείς, δεν μπορεί να 
εξαρτάται από κάτι τέτοιο.

** Αναζητήσεις και Διαγραφές Κλειδιών του Σχεσιακού Πίνακα

Όταν τα δεδομένα έχουν αποθηκευτεί σε ένα σχεσιακό πίνακα, για να ανακαλέσει κανείς δεδομένα
απαιτείται αναζήτηση, με χρήση κλειδιού.

    user1, exists1 := users["Bill"]
    user2, exists2 := users["Ford"]

    fmt.Println("Bill:", exists1, user1)
    fmt.Println("Ford:", exists2, user2)

Αποτέλεσμα:

    Bill: false { }
    Ford: true {Henry Ford}

Προκειμένου να γίνει αναζήτηση με κλειδί, χρησιμοποιούνται αγκύλες με την μεταβλητή 
σχεσιακού πίνακα. Από μια αναζήτηση σχεσιακού πίνακα μπορούν να επιστραφούν 
δύο τιμές, η τιμή καθεαυτή και μια τιμή αλήθειας, που αναπαριστά αν η τιμή βρέθηκε ή όχι.
Αν δεν χρειάζεται κανείς να γνωρίζει αυτή την πληροφορία, είναι δυνατόν να παραλείψει 
την μεταβλητή "υπάρχει".

Όταν ένα κλειδί δεν είναι παρόν στον σχεσιακό πίνακα, η λειτουργία επιστρέφει μια 
τιμή του τύπου του σχεσιακού πίνακα, ίση με την κατάσταση μηδενικής τιμής. Είναι 
δυνατόν να το παρατηρήσει κανείς, με την χρήση του κλειδιού "Bill". Κανείς, δεν πρέπει να 
χρησιμοποιεί την μηδενική τιμή, για να προσδιορίσει αν ένα κλειδί υπάρχει στον σχεσιακό πίνακα 
πίνακα ή όχι, καθώς η μηδενική τιμή μπορεί να είναι έγκυρη και να ισούται με το 
πραγματικό περιεχόμενο, που αντιστοιχούσε στο κλειδί.

    delete(users, "Roy")

Υπάρχει μια προεγκατεστημένη συνάρτηση, που ονομάζεται delete, η οποία επιτρέπει την διαγραφή 
δεδομένων, από τον σχεσιακό πίνακα με βάση κάποιο κλειδί.

** Περιορισμοί Κλειδιών Σχεσιακού Πίνακα

Δεν μπορούν να χρησιμοποιηθούν όλοι οι τύποι, ως κλειδιά.

    type slice []user
    Users := make(map[slice]user)

Σφάλμα Μεταγλωττιστή:

    invalid map key type users

Μια φέτα είναι ένα καλό παράδειγμα ενός τύπου, που δεν μπορεί να χρησιμοποιηθεί ως κλειδί. Μόνο
τιμές που μπορούν να χρησιμοποιηθούν από την συνάρτηση κατακερματισμού είναι διαθέσιμες. Ένας 
καλός τρόπος να αναγνωρίζει κανείς τύπους, που μπορούν να χρησιμοποιηθούν ως κλειδιά είναι αν 
ο τύπος μπορεί να χρησιμοποιηθεί σε μια διαδικασία σύγκρισης. Δεν είναι δυνατόν να 
συγκρίνει κανείς δύο τιμές φετών.

** Σημειώσεις

- Οι σχεσιακοί πίνακες παρέχουν ένα τρόπο για αποθήκευση και ανάκληση ζευγών κλειδιού/τιμής.
- Προσπάθεια ανάγνωσης ενός απόντος κλειδιού επιστρέφει την μηδενική τιμή, για τον τύπο τιμών του σχεσιακού πίνακα.
- Η διαδοχική προσπέλαση ενός σχεσιακού πίνακα γίνεται πάντα τυχαία.
- Το κλειδί του σχεσιακού πίνακα πρέπει να είναι μια τιμή, που να μπορεί να συγκριθεί (στμ. comparable αλλά και βλ. περιορισμοί τύπων).
- Τα στοιχεία σε ένα σχεσιακό πίνακα δεν μπορούν επιδέχονται την λήψη της διεύθυνσης μνήμης τους.
- Οι σχεσιακοί πίνακες είναι τύποι αναφορών.

** Σύνδεσμοι

- [[https://blog.golang.org/go-maps-in-action][Σχεσιακοί πίνακες της Go στην πράξη]] - Andrew Gerrand    
- [[https://www.ardanlabs.com/blog/2013/12/macro-view-of-map-internals-in-go.html][Μακροεικόνα των Εσωτερικών Μηχανισμών των Σχεσιακών Πινάκων στην Go]] - William Kennedy    
- [[https://www.youtube.com/watch?v=Tl7mi9QmLns][Εντός της Υλοποίησης Των Σχεσιακών Πινάκων]] - Keith Randall    
- [[https://dave.cheney.net/2018/05/29/how-the-go-runtime-implements-maps-efficiently-without-generics][Πως το εκτελέσιμο περιβάλλον της Go υλοποιεί τους σχεσιακούς πίνακες αποτελεσματικά (χωρίς την χρήση παραμετρικού πολυμορφισμού τύπων)]] - Dave Cheney     

* Ασκήσεις 

Χρησιμοποιήστε το παρόν πρότυπο ως σημείο αναφοράς προκειμένου να ολοκληρώσετε τις ασκήσεις. Σας παρέχεται μια πιθανή λύση.

** Άσκηση 1

Δηλώστε και δημιουργήστε έναν σχεσιακό πίνακα ακέραιων τιμών, με μια συμβολοσειρά ως κλειδί. Προσθέστε στον
σχεσιακό πίνακα πέντε τιμές και επισκεφθείτε διαδοχικά τα στοιχεία του σχεσιακού πίνακα, για να παρουσιάσετε
τα ζεύγη κλειδιού/τιμής.

.play maps/exercise1.go
.play maps/answer1.go
