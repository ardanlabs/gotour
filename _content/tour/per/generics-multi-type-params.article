پارامترهای چند نوعی
شما محدود به استفاده از یک نوع ژنریک در هر زمان نیستید.

* ویدیو

مشاهده می‌کنید که من در مورد ژنریک‌ها چه چیزی ارائه داده‌ام که شما را از طریق تمام مثال‌های این بخش از تور راه می‌دهد.

.html generics-video.html

** بررسی کد

- *مثال* *1*: تابع چاپ

.play generics/multi-type-params/example1.go

** توضیح داده شده

    func Print[L any, V fmt.Stringer](labels []L, vals []V) {
        for i, v := range vals {
            fmt.Println(labels[i], v.String())
        }
    }

تابع Print یک مجموعه از نوعی L و یک مجموعه از نوعی V را قبول می‌کند. نوع L می‌تواند هر چیزی باشد، اما نوع V محدود به مقادیری است که می‌دانند چگونه به رشته تبدیل شوند. مجموعه‌ای از نوع V به صورت تکراری پیمایش می‌شود و با برچسب متناظر از مجموعه نوع L چاپ می‌شود.

نام نوع ژنریک می‌تواند هر چیزی باشد. توصیف نامگذاری برای انواع ژنریک چیزی است که باید برای دستورات بهتر تعریف شود. در حال حاضر، تلاش کنید تا وقتی که برای خوانایی کار می‌کند، به حروف بزرگ تکراری نسبت به نامگذاری انواع ژنریک پایبند باشید.